// *** GENERATED BY PRISMIX :: DO NOT EDIT ***
datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["fullTextSearch", "fullTextIndex"]
}

model User {
  id           Int      @id @default(autoincrement())
  email        String   @unique
  password     String
  name         String
  cpf          String   @unique
  birth        String
  phone        String
  pronoun      String
  admin        Boolean  @default(false)
  image        String?  @db.Text
  google_id    String?  @unique
  google_token String?  @db.Text
  address_id   Int?
  address      Address? @relation(name: "AddressToUser")
}

model Product {
  id          Int        @id @default(autoincrement())
  name        String
  categories  Category[] @relation(name: "CategoryToProduct")
  supplier_id Int
  supplier    Supplier   @relation(name: "ProductToSupplier", fields: [supplier_id], references: [id], onDelete: Cascade)
}

model Category {
  id       Int       @id @default(autoincrement())
  name     String
  image    String?   @db.Text
  products Product[] @relation(name: "CategoryToProduct")
}

model Log {
  id        Int    @id @default(autoincrement())
  text      String
  timestamp String
}

model Supplier {
  id         Int       @id @default(autoincrement())
  name       String
  cnpj       String
  code       String
  contact_id Int       @unique
  contact    Contact   @relation(name: "ContactToSupplier", fields: [contact_id], references: [id], onDelete: Cascade)
  products   Product[] @relation(name: "ProductToSupplier")
}

model Contact {
  id          Int       @id @default(autoincrement())
  name        String
  phone       String?
  email       String?
  supplier_id Int?
  supplier    Supplier? @relation(name: "ContactToSupplier")
}

model Address {
  id       Int    @id @default(autoincrement())
  cep      String
  street   String
  number   String
  district String
  uf       String
  city     String
  user_id  Int    @unique
  user     User   @relation(name: "AddressToUser", fields: [user_id], references: [id], onDelete: Cascade)
}
